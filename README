== How SystemMonitor works

# Install SystemMonitor from GitHub http://github.com/iboard or
  Clone-URL http://git.iboard.cc/git/system_monitor/
  
  git clone  http://git.iboard.cc/git/system_monitor/ 
  --or--
  git clone git://github.com/iboard/system_monitor.git
  
# Edit <code>config/environment.rb</code> and define your monitors and asserts like shown below
# Edit <code>config/environments/production.rb, development.rb</code> - see sample.rb-files
# Make sure your server can access the remote hosts through ssh with ssh-keys without password
# Start the server with script/server and call http://yourserver:yourport/

== Definitions

  Edit your _environment.rb_ and add your definitions there...

== SystemMonitor

  remotehost, name, command, parameters
  
  _command_ will be executed by ssh using _remotehost_.
  The output of this ssh-request will be displayed


== RemoteAssert

    remotehost, name, command, word, assert
    
    _ssh remotehost command_ will be execuded.
    The output will be split by 'spaces' and word number <em>word</em> will be returned as value. (first word is 0).
    This _value_ will be used as FLOAT,INTEGER,STRING in the assert-command.


== Examples

    MY_MONITORS=[
      SystemMonitor::SysMonitor.new('root@your.server', 'Disk usage YourServer', 'df', '-h|grep sd'),
      SystemMonitor::SysMonitor.new('root@your.server', 'Syslod YourServer', 'uptime', ''),
      SystemMonitor::SysMonitor.new('root@your.server', 'Mailqueue YourServer', 'mailq', '|tail -1')
    ]

    REMOTE_ASSERTS=[
      SystemMonitor::RemoteAssert.new('root@your.server', 'Root partition usage YourServer', 
        'df|grep "/dev/sda2"', 4, 'INTEGER < 80 && STRING != ""',
        'alert@your.domain','Monitoring ALERT detected'),
      SystemMonitor::RemoteAssert.new('root@s1.iboard.cc', 'Root partition usage s1', 
        'df|grep "/dev/md2"', 4, 'INTEGER < 80 && STRING != ""',
        'alert@your.domain','Monitoring ALERT detect)
    ]

